name: OpenVPN Connect and Script

on: [workflow_dispatch]

jobs:
  run-openvpn:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openvpn google-chrome-stable
        python -m pip install --upgrade pip --ignore-installed
        pip install --upgrade pip --ignore-installed
        pip install requests
        pip install --upgrade wheel --ignore-installed
        pip install --upgrade seleniumbase --ignore-installed
        pip install --upgrade pyautogui --ignore-installed
        pip install --upgrade pymongo --ignore-installed
        pip install --upgrade python-xlib --ignore-installed
        seleniumbase install chromedriver
        
    - name: Run Opera VPN Python script
      run: |
        python3 opera_vpn_screenshot.py

    - name: Connect to random OpenVPN config
      shell: bash
      run: |
        configs=(vpn-configs/*.ovpn)
        if [ ${#configs[@]} -eq 0 ]; then
          echo "No .ovpn configs found in ./vpn-configs"
          exit 1
        fi
    
        # Shuffle configs so we try them in random order
        configs=( $(shuf -e "${configs[@]}") )
    
        connected=false
        for config in "${configs[@]}"; do
          echo "Trying $config"
    
          # Strip Windows-only directives that break on Linux
          sed '/block-outside-dns/d;/route-method/d;/route-delay/d' "$config" > temp.ovpn
    
          # Start OpenVPN with a 30s timeout
          sudo timeout 30 openvpn --config temp.ovpn --daemon
          sleep 15
    
          # Check if IP changed
          ip=$(curl -s --max-time 5 ifconfig.me || true)
          echo "Public IP after attempt: $ip"
    
          if [ -n "$ip" ]; then
            echo "VPN connection appears successful with $config"
            connected=true
            break
          else
            echo "Connection failed for $config, trying next..."
            # Kill any leftover openvpn processes before retrying
            sudo pkill -f openvpn || true
          fi
        done
    
        if [ "$connected" != true ]; then
          echo "No working VPN config found"
          exit 1
        fi
        curl ifconfig.me || true

    - name: Run Opera VPN Python script
      run: |
        python3 ena.py
    - name: Upload screenshot artifact
      uses: actions/upload-artifact@v4
      with:
        name: ipleak-screenshot
        path: ipleak_screenshot.png

